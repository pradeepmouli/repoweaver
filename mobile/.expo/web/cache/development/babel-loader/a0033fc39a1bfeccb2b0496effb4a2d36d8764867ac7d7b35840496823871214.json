{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ensureGetImageAvailable = void 0;\nvar _dynamicLoadingSetting = require(\"./dynamicLoading/dynamic-loading-setting.js\");\nlet NativeIconAPI = null;\ntry {\n  NativeIconAPI = require('@react-native-vector-icons/get-image');\n} catch {}\nconst globalRef = globalThis;\nconst hasExpoRenderToImage = (0, _dynamicLoadingSetting.getIsRenderToImageSupported)(globalRef);\nconst ensureGetImageAvailable = () => {\n  if (NativeIconAPI) {\n    NativeIconAPI.ensureNativeModuleAvailable();\n    return NativeIconAPI;\n  }\n  if (hasExpoRenderToImage) {\n    const {\n      ExpoFontUtils\n    } = globalRef.expo.modules;\n    return {\n      getImageForFont: async (fontReference, glyph, size, color) => ExpoFontUtils.renderToImageAsync(glyph, {\n        fontFamily: fontReference,\n        size,\n        color\n      }),\n      getImageForFontSync: () => {\n        throw new Error('You attempted to call `getImageForFontSync`. Expo dev client with `@react-native-vector-icons/get-image` installed is required for this. Alternatively, call `getImageForFont` or generate the image yourself and bundle it with the app.');\n      }\n    };\n  }\n  throw new Error('Error in getImageSource / getImageSourceSync: You need to either (1) install `@react-native-vector-icons/get-image` or (2) use Expo SDK 53+ (Expo dev client or Expo Go). Check your setup and rebuild the app.');\n};\nexports.ensureGetImageAvailable = ensureGetImageAvailable;","map":{"version":3,"names":["_dynamicLoadingSetting","require","NativeIconAPI","globalRef","globalThis","hasExpoRenderToImage","getIsRenderToImageSupported","ensureGetImageAvailable","ensureNativeModuleAvailable","ExpoFontUtils","expo","modules","getImageForFont","fontReference","glyph","size","color","renderToImageAsync","fontFamily","getImageForFontSync","Error","exports"],"sources":["/Users/pmouli/Documents/GitHub.nosync/boots-strapper/mobile/node_modules/@react-native-vector-icons/common/src/get-image-library.ts"],"sourcesContent":["import { getIsRenderToImageSupported } from './dynamicLoading/dynamic-loading-setting';\n\n// eslint-disable-next-line import/no-mutable-exports\nlet NativeIconAPI: typeof import('@react-native-vector-icons/get-image') | null = null;\n\ntry {\n  // eslint-disable-next-line global-require,import/no-extraneous-dependencies,@typescript-eslint/no-require-imports\n  NativeIconAPI = require('@react-native-vector-icons/get-image');\n} catch {\n  // if this fails, it's likely due to:\n  // \"Invariant Violation: TurboModuleRegistry.getEnforcing(...): 'VectorIcons' could not be found. ...\"\n  // No warning at this stage.\n}\n\nconst globalRef = globalThis;\nconst hasExpoRenderToImage = getIsRenderToImageSupported(globalRef);\n\nexport const ensureGetImageAvailable = () => {\n  if (NativeIconAPI) {\n    NativeIconAPI.ensureNativeModuleAvailable();\n    return NativeIconAPI;\n  }\n  if (hasExpoRenderToImage) {\n    const { ExpoFontUtils } = globalRef.expo.modules;\n    return {\n      getImageForFont: async (fontReference: string, glyph: string, size: number, color: number) =>\n        ExpoFontUtils.renderToImageAsync(glyph, {\n          fontFamily: fontReference,\n          size,\n          color,\n        }),\n      getImageForFontSync: () => {\n        throw new Error(\n          'You attempted to call `getImageForFontSync`. Expo dev client with `@react-native-vector-icons/get-image` installed is required for this. Alternatively, call `getImageForFont` or generate the image yourself and bundle it with the app.',\n        );\n      },\n    };\n  }\n  throw new Error(\n    'Error in getImageSource / getImageSourceSync: You need to either (1) install `@react-native-vector-icons/get-image` or (2) use Expo SDK 53+ (Expo dev client or Expo Go). Check your setup and rebuild the app.',\n  );\n};\n"],"mappings":";;;;;;AAAA,IAAAA,sBAAA,GAAAC,OAAA;AAGA,IAAIC,aAA2E,GAAG,IAAI;AAEtF,IAAI;EAEFA,aAAa,GAAGD,OAAO,CAAC,sCAAsC,CAAC;AACjE,CAAC,CAAC,MAAM,CAGN;AAGF,MAAME,SAAS,GAAGC,UAAU;AAC5B,MAAMC,oBAAoB,GAAG,IAAAL,sBAAA,CAAAM,2BAA2B,EAACH,SAAS,CAAC;AAE5D,MAAMI,uBAAuB,GAAGA,CAAA,KAAM;EAC3C,IAAIL,aAAa,EAAE;IACjBA,aAAa,CAACM,2BAA2B,CAAC,CAAC;IAC3C,OAAON,aAAa;EACtB;EACA,IAAIG,oBAAoB,EAAE;IACxB,MAAM;MAAEI;IAAc,CAAC,GAAGN,SAAS,CAACO,IAAI,CAACC,OAAO;IAChD,OAAO;MACLC,eAAe,EAAE,MAAAA,CAAOC,aAAqB,EAAEC,KAAa,EAAEC,IAAY,EAAEC,KAAa,KACvFP,aAAa,CAACQ,kBAAkB,CAACH,KAAK,EAAE;QACtCI,UAAU,EAAEL,aAAa;QACzBE,IAAI;QACJC;MACF,CAAC,CAAC;MACJG,mBAAmB,EAAEA,CAAA,KAAM;QACzB,MAAM,IAAIC,KAAK,CACb,2OACF,CAAC;MACH;IACF,CAAC;EACH;EACA,MAAM,IAAIA,KAAK,CACb,iNACF,CAAC;AACH,CAAC;AAACC,OAAA,CAAAd,uBAAA,GAAAA,uBAAA","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"icon\", \"iconColor\", \"rippleColor\", \"onIconPress\", \"searchAccessibilityLabel\", \"clearIcon\", \"clearAccessibilityLabel\", \"onClearIconPress\", \"traileringIcon\", \"traileringIconColor\", \"traileringIconAccessibilityLabel\", \"traileringRippleColor\", \"onTraileringIconPress\", \"right\", \"mode\", \"showDivider\", \"inputStyle\", \"placeholder\", \"elevation\", \"style\", \"theme\", \"value\", \"loading\", \"testID\"];\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport ActivityIndicator from \"./ActivityIndicator\";\nimport Divider from \"./Divider\";\nimport IconButton from \"./IconButton/IconButton\";\nimport MaterialCommunityIcon from \"./MaterialCommunityIcon\";\nimport Surface from \"./Surface\";\nimport { useInternalTheme } from \"../core/theming\";\nimport { forwardRef } from \"../utils/forwardRef\";\nconst Searchbar = forwardRef((_ref, ref) => {\n  let {\n      icon,\n      iconColor: customIconColor,\n      rippleColor: customRippleColor,\n      onIconPress,\n      searchAccessibilityLabel = 'search',\n      clearIcon,\n      clearAccessibilityLabel = 'clear',\n      onClearIconPress,\n      traileringIcon,\n      traileringIconColor,\n      traileringIconAccessibilityLabel,\n      traileringRippleColor: customTraileringRippleColor,\n      onTraileringIconPress,\n      right,\n      mode = 'bar',\n      showDivider = true,\n      inputStyle,\n      placeholder,\n      elevation = 0,\n      style,\n      theme: themeOverrides,\n      value,\n      loading = false,\n      testID = 'search-bar'\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var _theme$colors, _theme$colors2;\n  const theme = useInternalTheme(themeOverrides);\n  const root = React.useRef(null);\n  React.useImperativeHandle(ref, () => ({\n    focus: () => {\n      var _root$current;\n      return (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.focus();\n    },\n    clear: () => {\n      var _root$current2;\n      return (_root$current2 = root.current) === null || _root$current2 === void 0 ? void 0 : _root$current2.clear();\n    },\n    setNativeProps: args => {\n      var _root$current3;\n      return (_root$current3 = root.current) === null || _root$current3 === void 0 ? void 0 : _root$current3.setNativeProps(args);\n    },\n    isFocused: () => {\n      var _root$current4;\n      return ((_root$current4 = root.current) === null || _root$current4 === void 0 ? void 0 : _root$current4.isFocused()) || false;\n    },\n    blur: () => {\n      var _root$current5;\n      return (_root$current5 = root.current) === null || _root$current5 === void 0 ? void 0 : _root$current5.blur();\n    },\n    setSelection: (start, end) => {\n      var _root$current6;\n      return (_root$current6 = root.current) === null || _root$current6 === void 0 ? void 0 : _root$current6.setSelection(start, end);\n    }\n  }));\n  const handleClearPress = e => {\n    var _root$current7, _rest$onChangeText;\n    (_root$current7 = root.current) === null || _root$current7 === void 0 || _root$current7.clear();\n    (_rest$onChangeText = rest.onChangeText) === null || _rest$onChangeText === void 0 || _rest$onChangeText.call(rest, '');\n    onClearIconPress === null || onClearIconPress === void 0 || onClearIconPress(e);\n  };\n  const {\n    roundness,\n    dark,\n    isV3,\n    fonts\n  } = theme;\n  const placeholderTextColor = isV3 ? theme.colors.onSurface : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.placeholder;\n  const textColor = isV3 ? theme.colors.onSurfaceVariant : theme.colors.text;\n  const md2IconColor = dark ? textColor : color(textColor).alpha(0.54).rgb().string();\n  const iconColor = customIconColor || (isV3 ? theme.colors.onSurfaceVariant : md2IconColor);\n  const rippleColor = customRippleColor || color(textColor).alpha(0.32).rgb().string();\n  const traileringRippleColor = customTraileringRippleColor || color(textColor).alpha(0.32).rgb().string();\n  const font = isV3 ? Object.assign({}, fonts.bodyLarge, {\n    lineHeight: Platform.select({\n      ios: 0,\n      default: fonts.bodyLarge.lineHeight\n    })\n  }) : theme.fonts.regular;\n  const isBarMode = isV3 && mode === 'bar';\n  const shouldRenderTraileringIcon = isBarMode && traileringIcon && !loading && (!value || right !== undefined);\n  return React.createElement(Surface, _extends({\n    style: [{\n      borderRadius: roundness\n    }, !isV3 && styles.elevation, isV3 && {\n      backgroundColor: theme.colors.elevation.level3,\n      borderRadius: roundness * (isBarMode ? 7 : 0)\n    }, styles.container, style],\n    testID: `${testID}-container`\n  }, theme.isV3 && {\n    elevation\n  }, {\n    container: true,\n    theme: theme\n  }), React.createElement(IconButton, {\n    accessibilityRole: \"button\",\n    borderless: true,\n    rippleColor: rippleColor,\n    onPress: onIconPress,\n    iconColor: iconColor,\n    icon: icon || (({\n      size,\n      color\n    }) => React.createElement(MaterialCommunityIcon, {\n      name: \"magnify\",\n      color: color,\n      size: size,\n      direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n    })),\n    theme: theme,\n    accessibilityLabel: searchAccessibilityLabel,\n    testID: `${testID}-icon`\n  }), React.createElement(TextInput, _extends({\n    style: [styles.input, Object.assign({\n      color: textColor\n    }, font, Platform.select({\n      web: {\n        outline: 'none'\n      }\n    })), isV3 && (isBarMode ? styles.barModeInput : styles.viewModeInput), inputStyle],\n    placeholder: placeholder || '',\n    placeholderTextColor: placeholderTextColor,\n    selectionColor: (_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : _theme$colors2.primary,\n    underlineColorAndroid: \"transparent\",\n    returnKeyType: \"search\",\n    keyboardAppearance: dark ? 'dark' : 'light',\n    accessibilityRole: \"search\",\n    ref: root,\n    value: value,\n    testID: testID\n  }, rest)), loading ? React.createElement(ActivityIndicator, {\n    testID: \"activity-indicator\",\n    style: isV3 ? styles.v3Loader : styles.loader\n  }) : React.createElement(View, {\n    pointerEvents: value ? 'auto' : 'none',\n    testID: `${testID}-icon-wrapper`,\n    style: [isV3 && !value && styles.v3ClearIcon, isV3 && right !== undefined && styles.v3ClearIconHidden]\n  }, React.createElement(IconButton, {\n    borderless: true,\n    accessibilityLabel: clearAccessibilityLabel,\n    iconColor: value ? iconColor : 'rgba(255, 255, 255, 0)',\n    rippleColor: rippleColor,\n    onPress: handleClearPress,\n    icon: clearIcon || (({\n      size,\n      color\n    }) => React.createElement(MaterialCommunityIcon, {\n      name: isV3 ? 'close' : 'close-circle-outline',\n      color: color,\n      size: size,\n      direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n    })),\n    testID: `${testID}-clear-icon`,\n    accessibilityRole: \"button\",\n    theme: theme\n  })), shouldRenderTraileringIcon ? React.createElement(IconButton, {\n    accessibilityRole: \"button\",\n    borderless: true,\n    onPress: onTraileringIconPress,\n    iconColor: traileringIconColor || theme.colors.onSurfaceVariant,\n    rippleColor: traileringRippleColor,\n    icon: traileringIcon,\n    accessibilityLabel: traileringIconAccessibilityLabel,\n    testID: `${testID}-trailering-icon`\n  }) : null, isBarMode && (right === null || right === void 0 ? void 0 : right({\n    color: textColor,\n    style: styles.rightStyle,\n    testID\n  })), isV3 && !isBarMode && showDivider && React.createElement(Divider, {\n    bold: true,\n    style: [styles.divider, {\n      backgroundColor: theme.colors.outline\n    }],\n    testID: `${testID}-divider`\n  }));\n});\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1,\n    fontSize: 18,\n    paddingLeft: 8,\n    alignSelf: 'stretch',\n    textAlign: I18nManager.getConstants().isRTL ? 'right' : 'left',\n    minWidth: 0\n  },\n  barModeInput: {\n    paddingLeft: 0,\n    minHeight: 56\n  },\n  viewModeInput: {\n    paddingLeft: 0,\n    minHeight: 72\n  },\n  elevation: {\n    elevation: 4\n  },\n  loader: {\n    margin: 10\n  },\n  v3Loader: {\n    marginHorizontal: 16\n  },\n  rightStyle: {\n    marginRight: 16\n  },\n  v3ClearIcon: {\n    position: 'absolute',\n    right: 0,\n    marginLeft: 16\n  },\n  v3ClearIconHidden: {\n    display: 'none'\n  },\n  divider: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  }\n});\nexport default Searchbar;","map":{"version":3,"names":["React","I18nManager","Platform","StyleSheet","TextInput","View","color","ActivityIndicator","Divider","IconButton","MaterialCommunityIcon","Surface","useInternalTheme","forwardRef","Searchbar","_ref","ref","icon","iconColor","customIconColor","rippleColor","customRippleColor","onIconPress","searchAccessibilityLabel","clearIcon","clearAccessibilityLabel","onClearIconPress","traileringIcon","traileringIconColor","traileringIconAccessibilityLabel","traileringRippleColor","customTraileringRippleColor","onTraileringIconPress","right","mode","showDivider","inputStyle","placeholder","elevation","style","theme","themeOverrides","value","loading","testID","rest","_objectWithoutPropertiesLoose","_excluded","_theme$colors","_theme$colors2","root","useRef","useImperativeHandle","focus","_root$current","current","clear","_root$current2","setNativeProps","args","_root$current3","isFocused","_root$current4","blur","_root$current5","setSelection","start","end","_root$current6","handleClearPress","e","_root$current7","_rest$onChangeText","onChangeText","call","roundness","dark","isV3","fonts","placeholderTextColor","colors","onSurface","textColor","onSurfaceVariant","text","md2IconColor","alpha","rgb","string","font","Object","assign","bodyLarge","lineHeight","select","ios","default","regular","isBarMode","shouldRenderTraileringIcon","undefined","createElement","_extends","borderRadius","styles","backgroundColor","level3","container","accessibilityRole","borderless","onPress","size","name","direction","getConstants","isRTL","accessibilityLabel","input","web","outline","barModeInput","viewModeInput","selectionColor","primary","underlineColorAndroid","returnKeyType","keyboardAppearance","v3Loader","loader","pointerEvents","v3ClearIcon","v3ClearIconHidden","rightStyle","bold","divider","create","flexDirection","alignItems","flex","fontSize","paddingLeft","alignSelf","textAlign","minWidth","minHeight","margin","marginHorizontal","marginRight","position","marginLeft","display","bottom","width"],"sources":["/Users/pmouli/Documents/GitHub.nosync/boots-strapper/mobile/node_modules/react-native-paper/src/components/Searchbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  GestureResponderEvent,\n  I18nManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextInput,\n  TextInputProps,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport ActivityIndicator from './ActivityIndicator';\nimport Divider from './Divider';\nimport type { IconSource } from './Icon';\nimport IconButton from './IconButton/IconButton';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\nimport Surface from './Surface';\nimport { useInternalTheme } from '../core/theming';\nimport type { ThemeProp } from '../types';\nimport { forwardRef } from '../utils/forwardRef';\n\ninterface Style {\n  marginRight: number;\n}\n\nexport type Props = React.ComponentPropsWithRef<typeof TextInput> & {\n  /**\n   * Hint text shown when the input is empty.\n   */\n  placeholder?: string;\n  /**\n   * The value of the text input.\n   */\n  value: string;\n  /**\n   * Callback that is called when the text input's text changes.\n   */\n  onChangeText?: (query: string) => void;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Search layout mode, the default value is \"bar\".\n   */\n  mode?: 'bar' | 'view';\n  /**\n   * Icon name for the left icon button (see `onIconPress`).\n   */\n  icon?: IconSource;\n  /**\n   * Custom color for icon, default will be derived from theme\n   */\n  iconColor?: string;\n  /**\n   * Color of the ripple effect.\n   */\n  rippleColor?: ColorValue;\n  /**\n   * Callback to execute if we want the left icon to act as button.\n   */\n  onIconPress?: (e: GestureResponderEvent) => void;\n\n  /**\n   * Callback to execute if we want to add custom behaviour to close icon button.\n   */\n  onClearIconPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  searchAccessibilityLabel?: string;\n  /**\n   * Custom icon for clear button, default will be icon close. It's visible when `loading` is set to `false`.\n   * In v5.x with theme version 3, `clearIcon` is visible only `right` prop is not defined.\n   */\n  clearIcon?: IconSource;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  clearAccessibilityLabel?: string;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Icon name for the right trailering icon button.\n   * Works only when `mode` is set to \"bar\". It won't be displayed if `loading` is set to `true`.\n   */\n  traileringIcon?: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Custom color for the right trailering icon, default will be derived from theme\n   */\n  traileringIconColor?: string;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Color of the trailering icon ripple effect.\n   */\n  traileringRippleColor?: ColorValue;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Callback to execute on the right trailering icon button press.\n   */\n  onTraileringIconPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Accessibility label for the right trailering icon button. This is read by the screen reader when the user taps the button.\n   */\n  traileringIconAccessibilityLabel?: string;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Callback which returns a React element to display on the right side.\n   * Works only when `mode` is set to \"bar\".\n   */\n  right?: (props: {\n    color: string;\n    style: Style;\n    testID: string;\n  }) => React.ReactNode;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Whether to show `Divider` at the bottom of the search.\n   * Works only when `mode` is set to \"view\". True by default.\n   */\n  showDivider?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes Searchbar shadow and background on iOS and Android.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  /**\n   * Set style of the TextInput component inside the searchbar\n   */\n  inputStyle?: StyleProp<TextStyle>;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * Custom flag for replacing clear button with activity indicator.\n   */\n  loading?: Boolean;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\ntype TextInputHandles = Pick<\n  TextInput,\n  'setNativeProps' | 'isFocused' | 'clear' | 'blur' | 'focus' | 'setSelection'\n>;\n\n/**\n * Searchbar is a simple input box where users can type search queries.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Searchbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [searchQuery, setSearchQuery] = React.useState('');\n *\n *   return (\n *     <Searchbar\n *       placeholder=\"Search\"\n *       onChangeText={setSearchQuery}\n *       value={searchQuery}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n\n * ```\n */\nconst Searchbar = forwardRef<TextInputHandles, Props>(\n  (\n    {\n      icon,\n      iconColor: customIconColor,\n      rippleColor: customRippleColor,\n      onIconPress,\n      searchAccessibilityLabel = 'search',\n      clearIcon,\n      clearAccessibilityLabel = 'clear',\n      onClearIconPress,\n      traileringIcon,\n      traileringIconColor,\n      traileringIconAccessibilityLabel,\n      traileringRippleColor: customTraileringRippleColor,\n      onTraileringIconPress,\n      right,\n      mode = 'bar',\n      showDivider = true,\n      inputStyle,\n      placeholder,\n      elevation = 0,\n      style,\n      theme: themeOverrides,\n      value,\n      loading = false,\n      testID = 'search-bar',\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(themeOverrides);\n    const root = React.useRef<TextInput>(null);\n\n    React.useImperativeHandle(ref, () => ({\n      focus: () => root.current?.focus(),\n      clear: () => root.current?.clear(),\n      setNativeProps: (args: TextInputProps) =>\n        root.current?.setNativeProps(args),\n      isFocused: () => root.current?.isFocused() || false,\n      blur: () => root.current?.blur(),\n      setSelection: (start: number, end: number) =>\n        root.current?.setSelection(start, end),\n    }));\n\n    const handleClearPress = (e: any) => {\n      root.current?.clear();\n      rest.onChangeText?.('');\n      onClearIconPress?.(e);\n    };\n\n    const { roundness, dark, isV3, fonts } = theme;\n\n    const placeholderTextColor = isV3\n      ? theme.colors.onSurface\n      : theme.colors?.placeholder;\n    const textColor = isV3 ? theme.colors.onSurfaceVariant : theme.colors.text;\n    const md2IconColor = dark\n      ? textColor\n      : color(textColor).alpha(0.54).rgb().string();\n    const iconColor =\n      customIconColor || (isV3 ? theme.colors.onSurfaceVariant : md2IconColor);\n    const rippleColor =\n      customRippleColor || color(textColor).alpha(0.32).rgb().string();\n    const traileringRippleColor =\n      customTraileringRippleColor ||\n      color(textColor).alpha(0.32).rgb().string();\n\n    const font = isV3\n      ? {\n          ...fonts.bodyLarge,\n          lineHeight: Platform.select({\n            ios: 0,\n            default: fonts.bodyLarge.lineHeight,\n          }),\n        }\n      : theme.fonts.regular;\n\n    const isBarMode = isV3 && mode === 'bar';\n    const shouldRenderTraileringIcon =\n      isBarMode &&\n      traileringIcon &&\n      !loading &&\n      (!value || right !== undefined);\n\n    return (\n      <Surface\n        style={[\n          { borderRadius: roundness },\n          !isV3 && styles.elevation,\n          isV3 && {\n            backgroundColor: theme.colors.elevation.level3,\n            borderRadius: roundness * (isBarMode ? 7 : 0),\n          },\n          styles.container,\n          style,\n        ]}\n        testID={`${testID}-container`}\n        {...(theme.isV3 && { elevation })}\n        container\n        theme={theme}\n      >\n        <IconButton\n          accessibilityRole=\"button\"\n          borderless\n          rippleColor={rippleColor}\n          onPress={onIconPress}\n          iconColor={iconColor}\n          icon={\n            icon ||\n            (({ size, color }) => (\n              <MaterialCommunityIcon\n                name=\"magnify\"\n                color={color}\n                size={size}\n                direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n              />\n            ))\n          }\n          theme={theme}\n          accessibilityLabel={searchAccessibilityLabel}\n          testID={`${testID}-icon`}\n        />\n        <TextInput\n          style={[\n            styles.input,\n            {\n              color: textColor,\n              ...font,\n              ...Platform.select({ web: { outline: 'none' } }),\n            },\n            isV3 && (isBarMode ? styles.barModeInput : styles.viewModeInput),\n            inputStyle,\n          ]}\n          placeholder={placeholder || ''}\n          placeholderTextColor={placeholderTextColor}\n          selectionColor={theme.colors?.primary}\n          underlineColorAndroid=\"transparent\"\n          returnKeyType=\"search\"\n          keyboardAppearance={dark ? 'dark' : 'light'}\n          accessibilityRole=\"search\"\n          ref={root}\n          value={value}\n          testID={testID}\n          {...rest}\n        />\n        {loading ? (\n          <ActivityIndicator\n            testID=\"activity-indicator\"\n            style={isV3 ? styles.v3Loader : styles.loader}\n          />\n        ) : (\n          // Clear icon should be always rendered within Searchbar – it's transparent,\n          // without touch events, when there is no value. It's done to avoid issues\n          // with the abruptly stopping ripple effect and changing bar width on web,\n          // when clearing the value.\n          <View\n            pointerEvents={value ? 'auto' : 'none'}\n            testID={`${testID}-icon-wrapper`}\n            style={[\n              isV3 && !value && styles.v3ClearIcon,\n              isV3 && right !== undefined && styles.v3ClearIconHidden,\n            ]}\n          >\n            <IconButton\n              borderless\n              accessibilityLabel={clearAccessibilityLabel}\n              iconColor={value ? iconColor : 'rgba(255, 255, 255, 0)'}\n              rippleColor={rippleColor}\n              onPress={handleClearPress}\n              icon={\n                clearIcon ||\n                (({ size, color }) => (\n                  <MaterialCommunityIcon\n                    name={isV3 ? 'close' : 'close-circle-outline'}\n                    color={color}\n                    size={size}\n                    direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n                  />\n                ))\n              }\n              testID={`${testID}-clear-icon`}\n              accessibilityRole=\"button\"\n              theme={theme}\n            />\n          </View>\n        )}\n        {shouldRenderTraileringIcon ? (\n          <IconButton\n            accessibilityRole=\"button\"\n            borderless\n            onPress={onTraileringIconPress}\n            iconColor={traileringIconColor || theme.colors.onSurfaceVariant}\n            rippleColor={traileringRippleColor}\n            icon={traileringIcon}\n            accessibilityLabel={traileringIconAccessibilityLabel}\n            testID={`${testID}-trailering-icon`}\n          />\n        ) : null}\n        {isBarMode &&\n          right?.({ color: textColor, style: styles.rightStyle, testID })}\n        {isV3 && !isBarMode && showDivider && (\n          <Divider\n            bold\n            style={[\n              styles.divider,\n              {\n                backgroundColor: theme.colors.outline,\n              },\n            ]}\n            testID={`${testID}-divider`}\n          />\n        )}\n      </Surface>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  input: {\n    flex: 1,\n    fontSize: 18,\n    paddingLeft: 8,\n    alignSelf: 'stretch',\n    textAlign: I18nManager.getConstants().isRTL ? 'right' : 'left',\n    minWidth: 0,\n  },\n  barModeInput: {\n    paddingLeft: 0,\n    minHeight: 56,\n  },\n  viewModeInput: {\n    paddingLeft: 0,\n    minHeight: 72,\n  },\n  elevation: {\n    elevation: 4,\n  },\n  loader: {\n    margin: 10,\n  },\n  v3Loader: {\n    marginHorizontal: 16,\n  },\n  rightStyle: {\n    marginRight: 16,\n  },\n  v3ClearIcon: {\n    position: 'absolute',\n    right: 0,\n    marginLeft: 16,\n  },\n  v3ClearIconHidden: {\n    display: 'none',\n  },\n  divider: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n  },\n});\n\nexport default Searchbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
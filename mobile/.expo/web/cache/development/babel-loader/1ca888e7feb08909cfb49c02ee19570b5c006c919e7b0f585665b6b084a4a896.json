{"ast":null,"code":"var _jsxFileName = \"/Users/pmouli/Documents/GitHub.nosync/boots-strapper/mobile/src/navigation/AppNavigator.tsx\";\nimport React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { HomeScreen } from \"../screens/HomeScreen\";\nimport { TemplatesScreen } from \"../screens/TemplatesScreen\";\nimport { CreateProjectScreen } from \"../screens/CreateProjectScreen\";\nimport { ProjectProgressScreen } from \"../screens/ProjectProgressScreen\";\nimport { SettingsScreen } from \"../screens/SettingsScreen\";\nimport { TemplateDetailScreen } from \"../screens/TemplateDetailScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator();\nfunction MainTabs() {\n  return _jsxDEV(Tab.Navigator, {\n    screenOptions: ({\n      route\n    }) => ({\n      tabBarIcon: ({\n        focused,\n        color,\n        size\n      }) => {\n        let iconName;\n        if (route.name === 'Home') {\n          iconName = 'home';\n        } else if (route.name === 'Templates') {\n          iconName = 'folder-copy';\n        } else if (route.name === 'CreateProject') {\n          iconName = 'add-circle';\n        } else if (route.name === 'Settings') {\n          iconName = 'settings';\n        } else {\n          iconName = 'help';\n        }\n        return _jsxDEV(MaterialIcons, {\n          name: iconName,\n          size: size,\n          color: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 18\n        }, this);\n      },\n      tabBarActiveTintColor: '#6200EE',\n      tabBarInactiveTintColor: 'gray'\n    }),\n    children: [_jsxDEV(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: 'Projects'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"Templates\",\n      component: TemplatesScreen,\n      options: {\n        title: 'Templates'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"CreateProject\",\n      component: CreateProjectScreen,\n      options: {\n        title: 'Create'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        title: 'Settings'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\nexport function AppNavigator() {\n  return _jsxDEV(Stack.Navigator, {\n    children: [_jsxDEV(Stack.Screen, {\n      name: \"MainTabs\",\n      component: MainTabs,\n      options: {\n        headerShown: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"ProjectProgress\",\n      component: ProjectProgressScreen,\n      options: {\n        title: 'Project Progress'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"TemplateDetail\",\n      component: TemplateDetailScreen,\n      options: {\n        title: 'Template Details'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","createBottomTabNavigator","createNativeStackNavigator","MaterialIcons","HomeScreen","TemplatesScreen","CreateProjectScreen","ProjectProgressScreen","SettingsScreen","TemplateDetailScreen","jsxDEV","_jsxDEV","Tab","Stack","MainTabs","Navigator","screenOptions","route","tabBarIcon","focused","color","size","iconName","name","fileName","_jsxFileName","lineNumber","columnNumber","tabBarActiveTintColor","tabBarInactiveTintColor","children","Screen","component","options","title","AppNavigator","headerShown"],"sources":["/Users/pmouli/Documents/GitHub.nosync/boots-strapper/mobile/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nimport { HomeScreen } from '../screens/HomeScreen';\nimport { TemplatesScreen } from '../screens/TemplatesScreen';\nimport { CreateProjectScreen } from '../screens/CreateProjectScreen';\nimport { ProjectProgressScreen } from '../screens/ProjectProgressScreen';\nimport { SettingsScreen } from '../screens/SettingsScreen';\nimport { TemplateDetailScreen } from '../screens/TemplateDetailScreen';\n\nimport { RootStackParamList } from '../types';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction MainTabs() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName: keyof typeof MaterialIcons.glyphMap;\n\n          if (route.name === 'Home') {\n            iconName = 'home';\n          } else if (route.name === 'Templates') {\n            iconName = 'folder-copy';\n          } else if (route.name === 'CreateProject') {\n            iconName = 'add-circle';\n          } else if (route.name === 'Settings') {\n            iconName = 'settings';\n          } else {\n            iconName = 'help';\n          }\n\n          return <MaterialIcons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: '#6200EE',\n        tabBarInactiveTintColor: 'gray',\n      })}\n    >\n      <Tab.Screen \n        name=\"Home\" \n        component={HomeScreen} \n        options={{ title: 'Projects' }}\n      />\n      <Tab.Screen \n        name=\"Templates\" \n        component={TemplatesScreen}\n        options={{ title: 'Templates' }}\n      />\n      <Tab.Screen \n        name=\"CreateProject\" \n        component={CreateProjectScreen}\n        options={{ title: 'Create' }}\n      />\n      <Tab.Screen \n        name=\"Settings\" \n        component={SettingsScreen}\n        options={{ title: 'Settings' }}\n      />\n    </Tab.Navigator>\n  );\n}\n\nexport function AppNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"MainTabs\" \n        component={MainTabs} \n        options={{ headerShown: false }}\n      />\n      <Stack.Screen \n        name=\"ProjectProgress\" \n        component={ProjectProgressScreen}\n        options={{ title: 'Project Progress' }}\n      />\n      <Stack.Screen \n        name=\"TemplateDetail\" \n        component={TemplateDetailScreen}\n        options={{ title: 'Template Details' }}\n      />\n    </Stack.Navigator>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"textStyle\", \"style\", \"numeric\", \"maxFontSizeMultiplier\", \"testID\"];\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nconst DataTableCell = _ref => {\n  let {\n      children,\n      textStyle,\n      style,\n      numeric,\n      maxFontSizeMultiplier,\n      testID\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return React.createElement(TouchableRipple, _extends({}, rest, {\n    testID: testID,\n    style: [styles.container, numeric && styles.right, style]\n  }), React.createElement(CellContent, {\n    textStyle: textStyle,\n    testID: testID,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, children));\n};\nconst CellContent = ({\n  children,\n  textStyle,\n  maxFontSizeMultiplier,\n  testID\n}) => {\n  if (React.isValidElement(children)) {\n    return children;\n  }\n  return React.createElement(Text, {\n    style: textStyle,\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier,\n    testID: `${testID}-text-container`\n  }, children);\n};\nDataTableCell.displayName = 'DataTable.Cell';\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  right: {\n    justifyContent: 'flex-end'\n  }\n});\nexport default DataTableCell;","map":{"version":3,"names":["React","StyleSheet","TouchableRipple","Text","DataTableCell","_ref","children","textStyle","style","numeric","maxFontSizeMultiplier","testID","rest","_objectWithoutPropertiesLoose","_excluded","createElement","_extends","styles","container","right","CellContent","isValidElement","numberOfLines","displayName","create","flex","flexDirection","alignItems","justifyContent"],"sources":["/Users/pmouli/Documents/GitHub.nosync/boots-strapper/mobile/node_modules/react-native-paper/src/components/DataTable/DataTableCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  GestureResponderEvent,\n} from 'react-native';\n\nimport type { $RemoveChildren } from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableCell`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Text content style of the `DataTableCell`.\n   */\n  textStyle?: StyleProp<TextStyle>;\n  /**\n   * Specifies the largest possible scale a text font can reach.\n   */\n  maxFontSizeMultiplier?: number;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * A component to show a single cell inside of a table.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst DataTableCell = ({\n  children,\n  textStyle,\n  style,\n  numeric,\n  maxFontSizeMultiplier,\n  testID,\n  ...rest\n}: Props) => {\n  return (\n    <TouchableRipple\n      {...rest}\n      testID={testID}\n      style={[styles.container, numeric && styles.right, style]}\n    >\n      <CellContent\n        textStyle={textStyle}\n        testID={testID}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n      >\n        {children}\n      </CellContent>\n    </TouchableRipple>\n  );\n};\n\nconst CellContent = ({\n  children,\n  textStyle,\n  maxFontSizeMultiplier,\n  testID,\n}: Pick<\n  Props,\n  'children' | 'textStyle' | 'testID' | 'maxFontSizeMultiplier'\n>) => {\n  if (React.isValidElement(children)) {\n    return children;\n  }\n\n  return (\n    <Text\n      style={textStyle}\n      numberOfLines={1}\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n      testID={`${testID}-text-container`}\n    >\n      {children}\n    </Text>\n  );\n};\n\nDataTableCell.displayName = 'DataTable.Cell';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default DataTableCell;\n"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAU9B,OAAOC,eAAe;AACtB,OAAOC,IAAI;AAuDX,MAAMC,aAAa,GAAGC,IAAA,IAQT;EAAA,IARU;MACrBC,QAAQ;MACRC,SAAS;MACTC,KAAK;MACLC,OAAO;MACPC,qBAAqB;MACrBC;IAEK,CAAC,GAAAN,IAAA;IADHO,IAAA,GAAAC,6BAAA,CAAAR,IAAA,EAAAS,SAAA;EAEH,OACEd,KAAA,CAAAe,aAAA,CAACb,eAAe,EAAAc,QAAA,KACVJ,IAAI;IACRD,MAAM,EAAEA,MAAO;IACfH,KAAK,EAAE,CAACS,MAAM,CAACC,SAAS,EAAET,OAAO,IAAIQ,MAAM,CAACE,KAAK,EAAEX,KAAK;EAAE,IAE1DR,KAAA,CAAAe,aAAA,CAACK,WAAW;IACVb,SAAS,EAAEA,SAAU;IACrBI,MAAM,EAAEA,MAAO;IACfD,qBAAqB,EAAEA;EAAsB,GAE5CJ,QACU,CACE,CAAC;AAEtB,CAAC;AAED,MAAMc,WAAW,GAAGA,CAAC;EACnBd,QAAQ;EACRC,SAAS;EACTG,qBAAqB;EACrBC;AAIF,CAAC,KAAK;EACJ,IAAIX,KAAK,CAACqB,cAAc,CAACf,QAAQ,CAAC,EAAE;IAClC,OAAOA,QAAQ;EACjB;EAEA,OACEN,KAAA,CAAAe,aAAA,CAACZ,IAAI;IACHK,KAAK,EAAED,SAAU;IACjBe,aAAa,EAAE,CAAE;IACjBZ,qBAAqB,EAAEA,qBAAsB;IAC7CC,MAAM,EAAE,GAAGA,MAAM;EAAkB,GAElCL,QACG,CAAC;AAEX,CAAC;AAEDF,aAAa,CAACmB,WAAW,GAAG,gBAAgB;AAE5C,MAAMN,MAAM,GAAGhB,UAAU,CAACuB,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE;EACd,CAAC;EAEDR,KAAK,EAAE;IACLS,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAexB,aAAa","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
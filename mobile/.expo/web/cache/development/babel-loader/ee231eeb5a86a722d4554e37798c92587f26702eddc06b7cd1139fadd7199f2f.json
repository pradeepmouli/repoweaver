{"ast":null,"code":"import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { HomeScreen } from \"../screens/HomeScreen\";\nimport { TemplatesScreen } from \"../screens/TemplatesScreen\";\nimport { CreateProjectScreen } from \"../screens/CreateProjectScreen\";\nimport { ProjectProgressScreen } from \"../screens/ProjectProgressScreen\";\nimport { SettingsScreen } from \"../screens/SettingsScreen\";\nimport { TemplateDetailScreen } from \"../screens/TemplateDetailScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\nfunction MainTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = 'home';\n          } else if (route.name === 'Templates') {\n            iconName = 'folder-copy';\n          } else if (route.name === 'CreateProject') {\n            iconName = 'add-circle';\n          } else if (route.name === 'Settings') {\n            iconName = 'settings';\n          } else {\n            iconName = 'help';\n          }\n          return _jsx(MaterialIcons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#6200EE',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: 'Projects'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Templates\",\n      component: TemplatesScreen,\n      options: {\n        title: 'Templates'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"CreateProject\",\n      component: CreateProjectScreen,\n      options: {\n        title: 'Create'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        title: 'Settings'\n      }\n    })]\n  });\n}\nexport function AppNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"MainTabs\",\n      component: MainTabs,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"ProjectProgress\",\n      component: ProjectProgressScreen,\n      options: {\n        title: 'Project Progress'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"TemplateDetail\",\n      component: TemplateDetailScreen,\n      options: {\n        title: 'Template Details'\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","createBottomTabNavigator","createNativeStackNavigator","MaterialIcons","HomeScreen","TemplatesScreen","CreateProjectScreen","ProjectProgressScreen","SettingsScreen","TemplateDetailScreen","jsx","_jsx","jsxs","_jsxs","Tab","Stack","MainTabs","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","children","Screen","component","options","title","AppNavigator","headerShown"],"sources":["/Users/pmouli/Documents/GitHub.nosync/boots-strapper/mobile/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nimport { HomeScreen } from '../screens/HomeScreen';\nimport { TemplatesScreen } from '../screens/TemplatesScreen';\nimport { CreateProjectScreen } from '../screens/CreateProjectScreen';\nimport { ProjectProgressScreen } from '../screens/ProjectProgressScreen';\nimport { SettingsScreen } from '../screens/SettingsScreen';\nimport { TemplateDetailScreen } from '../screens/TemplateDetailScreen';\n\nimport { RootStackParamList } from '../types';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction MainTabs() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName: keyof typeof MaterialIcons.glyphMap;\n\n          if (route.name === 'Home') {\n            iconName = 'home';\n          } else if (route.name === 'Templates') {\n            iconName = 'folder-copy';\n          } else if (route.name === 'CreateProject') {\n            iconName = 'add-circle';\n          } else if (route.name === 'Settings') {\n            iconName = 'settings';\n          } else {\n            iconName = 'help';\n          }\n\n          return <MaterialIcons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: '#6200EE',\n        tabBarInactiveTintColor: 'gray',\n      })}\n    >\n      <Tab.Screen \n        name=\"Home\" \n        component={HomeScreen} \n        options={{ title: 'Projects' }}\n      />\n      <Tab.Screen \n        name=\"Templates\" \n        component={TemplatesScreen}\n        options={{ title: 'Templates' }}\n      />\n      <Tab.Screen \n        name=\"CreateProject\" \n        component={CreateProjectScreen}\n        options={{ title: 'Create' }}\n      />\n      <Tab.Screen \n        name=\"Settings\" \n        component={SettingsScreen}\n        options={{ title: 'Settings' }}\n      />\n    </Tab.Navigator>\n  );\n}\n\nexport function AppNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"MainTabs\" \n        component={MainTabs} \n        options={{ headerShown: false }}\n      />\n      <Stack.Screen \n        name=\"ProjectProgress\" \n        component={ProjectProgressScreen}\n        options={{ title: 'Project Progress' }}\n      />\n      <Stack.Screen \n        name=\"TemplateDetail\" \n        component={TemplateDetailScreen}\n        options={{ title: 'Template Details' }}\n      />\n    </Stack.Navigator>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
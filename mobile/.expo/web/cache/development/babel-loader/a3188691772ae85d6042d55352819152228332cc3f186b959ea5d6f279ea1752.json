{"ast":null,"code":"var _jsxFileName = \"/Users/pmouli/Documents/GitHub.nosync/boots-strapper/mobile/src/navigation/AppNavigator.tsx\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport React from 'react';\nimport { CreateProjectScreen } from \"../screens/CreateProjectScreen\";\nimport { HomeScreen } from \"../screens/HomeScreen\";\nimport { ProjectProgressScreen } from \"../screens/ProjectProgressScreen\";\nimport { SettingsScreen } from \"../screens/SettingsScreen\";\nimport { TemplateDetailScreen } from \"../screens/TemplateDetailScreen\";\nimport { TemplatesScreen } from \"../screens/TemplatesScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator();\nfunction MainTabs() {\n  return _jsxDEV(Tab.Navigator, {\n    screenOptions: ({\n      route\n    }) => ({\n      tabBarIcon: ({\n        focused,\n        color,\n        size\n      }) => {\n        let iconName;\n        if (route.name === 'Home') {\n          iconName = 'home';\n        } else if (route.name === 'Templates') {\n          iconName = 'folder-copy';\n        } else if (route.name === 'CreateProject') {\n          iconName = 'add-circle';\n        } else if (route.name === 'Settings') {\n          iconName = 'settings';\n        } else {\n          iconName = 'help';\n        }\n        return _jsxDEV(MaterialIcons, {\n          name: iconName,\n          size: size,\n          color: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      },\n      tabBarActiveTintColor: '#6200EE',\n      tabBarInactiveTintColor: 'gray'\n    }),\n    children: [_jsxDEV(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: 'Projects'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"Templates\",\n      component: TemplatesScreen,\n      options: {\n        title: 'Templates'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"CreateProject\",\n      component: CreateProjectScreen,\n      options: {\n        title: 'Create'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        title: 'Settings'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n}\nexport function AppNavigator() {\n  return _jsxDEV(Stack.Navigator, {\n    children: [_jsxDEV(Stack.Screen, {\n      name: \"Home\",\n      component: MainTabs,\n      options: {\n        headerShown: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"ProjectProgress\",\n      component: ProjectProgressScreen,\n      options: {\n        title: 'Project Progress'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"TemplateDetail\",\n      component: TemplateDetailScreen,\n      options: {\n        title: 'Template Details'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"names":["MaterialIcons","createBottomTabNavigator","createNativeStackNavigator","React","CreateProjectScreen","HomeScreen","ProjectProgressScreen","SettingsScreen","TemplateDetailScreen","TemplatesScreen","jsxDEV","_jsxDEV","Tab","Stack","MainTabs","Navigator","screenOptions","route","tabBarIcon","focused","color","size","iconName","name","fileName","_jsxFileName","lineNumber","columnNumber","tabBarActiveTintColor","tabBarInactiveTintColor","children","Screen","component","options","title","AppNavigator","headerShown"],"sources":["/Users/pmouli/Documents/GitHub.nosync/boots-strapper/mobile/src/navigation/AppNavigator.tsx"],"sourcesContent":["import { MaterialIcons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport React from 'react';\n\nimport { CreateProjectScreen } from '../screens/CreateProjectScreen';\nimport { HomeScreen } from '../screens/HomeScreen';\nimport { ProjectProgressScreen } from '../screens/ProjectProgressScreen';\nimport { SettingsScreen } from '../screens/SettingsScreen';\nimport { TemplateDetailScreen } from '../screens/TemplateDetailScreen';\nimport { TemplatesScreen } from '../screens/TemplatesScreen';\n\nimport { RootStackParamList } from '../types';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction MainTabs() {\n\treturn (\n\t\t<Tab.Navigator\n\t\t\tscreenOptions={({ route }) => ({\n\t\t\t\ttabBarIcon: ({ focused, color, size }) => {\n\t\t\t\t\tlet iconName: keyof typeof MaterialIcons.glyphMap;\n\n\t\t\t\t\tif (route.name === 'Home') {\n\t\t\t\t\t\ticonName = 'home';\n\t\t\t\t\t} else if (route.name === 'Templates') {\n\t\t\t\t\t\ticonName = 'folder-copy';\n\t\t\t\t\t} else if (route.name === 'CreateProject') {\n\t\t\t\t\t\ticonName = 'add-circle';\n\t\t\t\t\t} else if (route.name === 'Settings') {\n\t\t\t\t\t\ticonName = 'settings';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ticonName = 'help';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <MaterialIcons name={iconName} size={size} color={color} />;\n\t\t\t\t},\n\t\t\t\ttabBarActiveTintColor: '#6200EE',\n\t\t\t\ttabBarInactiveTintColor: 'gray',\n\t\t\t})}>\n\t\t\t<Tab.Screen name=\"Home\" component={HomeScreen} options={{ title: 'Projects' }} />\n\t\t\t<Tab.Screen name=\"Templates\" component={TemplatesScreen} options={{ title: 'Templates' }} />\n\t\t\t<Tab.Screen name=\"CreateProject\" component={CreateProjectScreen} options={{ title: 'Create' }} />\n\t\t\t<Tab.Screen name=\"Settings\" component={SettingsScreen} options={{ title: 'Settings' }} />\n\t\t</Tab.Navigator>\n\t);\n}\n\nexport function AppNavigator() {\n\treturn (\n\t\t<Stack.Navigator>\n\t\t\t<Stack.Screen name=\"Home\" component={MainTabs} options={{ headerShown: false }} />\n\t\t\t<Stack.Screen name=\"ProjectProgress\" component={ProjectProgressScreen} options={{ title: 'Project Progress' }} />\n\t\t\t<Stack.Screen name=\"TemplateDetail\" component={TemplateDetailScreen} options={{ title: 'Template Details' }} />\n\t\t</Stack.Navigator>\n\t);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}